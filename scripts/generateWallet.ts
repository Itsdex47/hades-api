import { Keypair } from '@solana/web3.js';
import * as fs from 'fs';
import * as path from 'path';

function generateWallet() {
  console.log('🔐 Generating new Solana wallet...');
  
  const keypair = Keypair.generate();
  const publicKey = keypair.publicKey.toString();
  const privateKey = Buffer.from(keypair.secretKey).toString('base64');
  
  console.log('✅ Wallet generated successfully!');
  console.log('');
  console.log('📋 Wallet Details:');
  console.log(`🔑 Public Key:  ${publicKey}`);
  console.log(`🔐 Private Key: ${privateKey}`);
  console.log('');
  console.log('⚠️  IMPORTANT: Keep your private key secure and never share it!');
  console.log('');
  console.log('📝 To use this wallet in your API:');
  console.log(`   Add to your .env file:`);
  console.log(`   SOLANA_WALLET_PRIVATE_KEY=${privateKey}`);
  console.log('');
  console.log('💰 To fund this wallet with devnet SOL:');
  console.log(`   Visit: https://faucet.solana.com/`);
  console.log(`   Use address: ${publicKey}`);
  console.log('');
  console.log('🪙 To get devnet USDC:');
  console.log('   Use the Solana Token Faucet or request from Circle sandbox');
  
  // Save to file for convenience
  const walletInfo = {
    publicKey,
    privateKey,
    generatedAt: new Date().toISOString(),
    network: 'devnet',
    note: 'Generated by Starling Labs setup script'
  };
  
  const outputPath = path.join(__dirname, '..', 'wallet.json');
  fs.writeFileSync(outputPath, JSON.stringify(walletInfo, null, 2));
  console.log(`💾 Wallet details saved to: ${outputPath}`);
  console.log('   (Add this file to .gitignore for security)');
}

if (require.main === module) {
  generateWallet();
}

export { generateWallet };